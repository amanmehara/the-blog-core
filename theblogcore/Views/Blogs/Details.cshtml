@model theblogcore.Models.BlogViewModel

@{
    ViewBag.Title = "Blog Details";
}

<h2>Details</h2>

<div>
    <h4>Blog</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Blog)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Blog.Title)
        </dd>

    </dl>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Blog.Content)
        </dt>

        <dd>
            @*@Html.DisplayFor(model => model.Blog.Content)*@

            @if (Model.Blog.Content != null)
            {
                @(new HtmlString(Model.Blog.Content.Replace(Environment.NewLine, "<br />")))
            }
        </dd>

    </dl>
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Blog.Author)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Blog.Author.UserName)
        </dd>

    </dl>
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Blog.DateTime)
        </dt>

        @if (Model.Blog.IsEdited)
        {
            <dd>
                <i>@Html.DisplayFor(model => model.Blog.DateTime)</i> (Last Edit at <i>@Html.DisplayFor(model => model.Blog.EditedTime)</i>)
            </dd>
        }
        else
        {
            <dd>
                <i>@Html.DisplayFor(model => model.Blog.DateTime)</i>
            </dd>
        }

    </dl>

    <hr />

    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Blog.Comments)
        </dt>

        <dd>
            <strong> @Html.DisplayFor(model => model.Blog.Comments.Count) </strong>
        </dd>

        @foreach (var item in Model.Blog.Comments.OrderBy(c => c.DateTime))
        {
            <dd>
                <br />
            </dd>

            <dd>
                @*@Html.DisplayFor(modelItem => item.Content)*@

                @if (item.Content != null)
                {
                    @(new HtmlString(item.Content.Replace(Environment.NewLine, "<br />")))
                }
            </dd>

            if (item.IsEdited)
            {
                <dd>
                    <small>Posted at <strong><i>@Html.DisplayFor(modelItem => item.DateTime)</i></strong> by <strong><i>@Html.DisplayFor(modelItem => item.Commentator.Email)</i></strong> (Last Edit at  <strong><i>@Html.DisplayFor(modelItem => item.EditedTime)</i></strong> ) </small>
                </dd>
            }
            else
            {
                <dd>
                    <small>Posted at <strong><i>@Html.DisplayFor(modelItem => item.DateTime)</i></strong> by <strong><i>@Html.DisplayFor(modelItem => item.Commentator.Email)</i></strong></small>
                </dd>
            }

            if (User.Identity.Name.Equals(item.Commentator.UserName))
            {
                <dd>
                    @Html.ActionLink("Edit", "Edit", "Comments", new { id = item.CommentId }, null) |
                    @Html.ActionLink("Delete", "Delete", "Comments", new { id = item.CommentId }, null)
                </dd>
            }
        }

    </dl>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <dl class="dl-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.Hidden("id", @Model.Blog.BlogId)

            <dd>
                @Html.EditorFor(model => model.Comment.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment.Content, "", new { @class = "text-danger" })
            </dd>

            <dd>
                <br />
            </dd>

            <dd>
                <input type="submit" value="Comment" class="btn btn-default" />
            </dd>
        </dl>
    }
</div>
@*<p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.BlogID }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@

@if (User.Identity.Name.Equals(Model.Blog.Author.UserName))
{
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Blog.BlogId }) |
        @Html.ActionLink("Back to List", "Index")
    </p>
}
else
{
    <p>
        @Html.ActionLink("Back to List", "Index")
    </p>
}
